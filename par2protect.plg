<?xml version="1.0" standalone="yes"?>
<!DOCTYPE PLUGIN [
<!ENTITY name "par2protect">
<!ENTITY author "Joly0">
<!ENTITY version "2025.03.21c">
<!ENTITY launch  "Settings/PAR2Protect">
<!ENTITY gitURL "https://raw.githubusercontent.com/Joly0/&name;/main">
<!ENTITY pluginURL "&gitURL;/&name;.plg">
<!ENTITY plgPATH "/boot/config/plugins/&name;">
<!ENTITY plgNAME "&name;-&version;-x86_64">
<!ENTITY emhttp "/usr/local/emhttp/plugins/&name;">
<!ENTITY par2VER "v1.2.0">
<!ENTITY par2NAME "par2cmdline-turbo-&par2VER;-x86_64">
]>
<PLUGIN name="&name;" author="&author;" version="&version;" launch="&launch;" pluginURL="&pluginURL;" support="https://forums.unraid.net/topic/YOURTHREAD" min="7.0.0">

    <CHANGES>
###2025.03.21c
- Fixed protected files list reloading on operation completion

###2025.03.21b
- Included missing settings changes

###2025.03.21a
- Include par2cmdline-turbo in the plugin package
- Use latest par2cmdline-turbo version from GitHub
- Improved cleanup of old package files

###2025.03.21
- Initial Release
    </CHANGES>
    
    
    <FILE Name="&emhttp;/README.md">
        <INLINE>
            **PAR2Protect**
            
Plugin to automatically create and verify PAR2 files for data protection on your Unraid server.
        </INLINE>
    </FILE>
    
    <FILE Name="&plgPATH;/&plgNAME;.txz" Run="upgradepkg --install-new">
        <URL>&gitURL;/packages/&plgNAME;.txz</URL>
    </FILE>
    
    <FILE Name="&plgPATH;/&par2NAME;.txz" Run="upgradepkg --install-new">
        <URL>&gitURL;/packages/&par2NAME;.txz</URL>
    </FILE>
    
    <FILE Run="/bin/bash">
        <INLINE>
            echo "+=============================================================================="
            echo "| Installing &name; &version;"
            echo "| Setting up configuration..."
            # Create required directories
            mkdir -p "&plgPATH;"
            mkdir -p "&plgPATH;/schedule/"
            
            # Creating database only if it doesn't exist
            if [ ! -f "&plgPATH;/par2protect.db" ]; then
                echo "| Creating database..."
                php /usr/local/emhttp/plugins/par2protect/scripts/init_db.php
            fi
            
            # Setup PAR2Protect Dashboard location only if menu config doesn't exist
            if [ ! -f "&plgPATH;/menu.cfg" ]; then
                echo "| Setting up dashboard location..."
                php /usr/local/emhttp/plugins/par2protect/scripts/update_menu_placement.php
            fi
            
            # Create temp directories if they dont exist
            if [ ! -d "/tmp/par2protect" ]; then
                echo "| Setting up temp directories..."
                php /usr/local/emhttp/plugins/par2protect/scripts/init_tmp_dirs.php
            fi
            
            # Setup events cleanup cron job
            echo "| Setting up events cleanup cron job..."
            php /usr/local/emhttp/plugins/par2protect/scripts/setup_events_cleanup_cron.php
            
            # Setup log backup cron job
            echo "| Setting up log backup cron job..."
            php /usr/local/emhttp/plugins/par2protect/scripts/setup_log_backup_cron.php
            
            echo "| Installation complete"
            echo "+=============================================================================="
        </INLINE>
    </FILE>
    
    <FILE Run="/bin/bash">
        <INLINE>
            # Cleanup old versions
            echo "| Cleaning up old package files..."
            find "&plgPATH;" -name "&name;-*.txz" ! -name "&plgNAME;.txz" -delete
            find "&plgPATH;" -name "par2cmdline-turbo-*.txz" ! -name "&par2NAME;.txz" -delete
        </INLINE>
    </FILE>
    
    <FILE Run="/bin/bash" Method="remove">
        <INLINE>
            echo "Removing &name;..."
            # Remove packages
            removepkg &plgPATH;/.txz
            removepkg &plgPATH;/par2cmdline-turbo*.txz
            
            # Remove par2cmdline-turbo
            rm -f /usr/local/bin/par2
            
            # Remove plugin files
            rm -rf &emhttp;
            
            # Remove temp files
            rm -rf /tmp/par2protect
            
            # Remove plugin settings
            rm -rf &plgPATH;
            echo "&name; has been removed"
        </INLINE>
    </FILE>
</PLUGIN>